/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.JD.DailyReports;

import com.JD.Search.*;
import com.JD.DatePicker.DatePicker;
import com.JD.ExportToExcel.ExportToExcel;
import com.JD.Test.*;
import com.JD.Master.Forms.*;
import java.awt.Color;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sourceforge.jdatepicker.impl.JDatePickerImpl;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;

/**
 *
 * @author Yogesh
 */
public class DM_Report extends javax.swing.JFrame {

    //---Load Date Panel---//
    com.JD.DatePicker.DatePicker datePicker = new DatePicker();
    JDatePickerImpl date1 = datePicker.getDateObjectUp();
    JDatePickerImpl date2 = datePicker.getDateObjectDown();
    List queryList = new ArrayList();
    javax.swing.table.DefaultTableModel defaultTableModel;
    SessionFactory search_SessionFactory = com.JD.StaticData.Static_DATA.init_SessionFactory;
    //---Load Date Panel---//    
    Date currenTDate = new Date();
    DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    String datestring = dateFormat.format(currenTDate);

    /**
     * Creates new form Party_MasterForm
     */
    public DM_Report() {
        initComponents();
        report_Button.setEnabled(false);
        com.JD.StaticData.Static_DATA.dM_Report = this;
        //----Load Calender----//
        date1.setBounds(17, 51, 200, 50);
        date1.setBackground(Color.yellow);
        date2.setBackground(Color.yellow);
        date_panel.add(date1);
        date_panel.add(date2);
        date2.setBounds(17, 102, 200, 40);
        //----Load Calender----//
        com.JD.StaticData.Static_DATA.dmReport_party_ComboBox = dmReport_party_ComboBox;
        defaultTableModel = (DefaultTableModel) dm_Table.getModel();
        //----------Fill ComboBox----------------------------------------------//
        Session session = search_SessionFactory.openSession();

        Query q = session.createQuery("from com.JD.Master.Hibernate.config.Partymaster");
        for (Object object : q.list()) {
            com.JD.Master.Hibernate.config.Partymaster p = (com.JD.Master.Hibernate.config.Partymaster) object;
            dmReport_party_ComboBox.addItem(p.getPartyName());
        }
        session.close();
        //----------Fill ComboBox----------------------------------------------//    
        currenTDate = new Date();
        dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        datestring = dateFormat.format(currenTDate);
        report("from com.JD.PrintReceiptDM.Hibernate.config.Printreceiptdm where dateOfAddition='" + datestring + "'");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        date_ButtonGroup = new javax.swing.ButtonGroup();
        paymentType_ButtonGroup = new javax.swing.ButtonGroup();
        DmReport_Panel = new javax.swing.JPanel();
        date_panel = new javax.swing.JPanel();
        betwee_CheackBox = new javax.swing.JCheckBox();
        equal_CheackBox = new javax.swing.JCheckBox();
        early_CheackBox = new javax.swing.JCheckBox();
        late_CheackBox = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        clear_CheackBox = new javax.swing.JCheckBox();
        dmReport_party_ComboBox = new javax.swing.JComboBox();
        report_Button = new javax.swing.JButton();
        reset_Button = new javax.swing.JButton();
        export_Button = new javax.swing.JButton();
        print_Button = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        dm_Table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        DmReport_Panel.setBackground(new java.awt.Color(255, 255, 51));

        date_panel.setBackground(new java.awt.Color(255, 255, 51));
        date_panel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 51, 0), 1, true));

        betwee_CheackBox.setBackground(new java.awt.Color(255, 255, 51));
        date_ButtonGroup.add(betwee_CheackBox);
        betwee_CheackBox.setText("Between");
        betwee_CheackBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 255)));
        betwee_CheackBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                betwee_CheackBoxActionPerformed(evt);
            }
        });

        equal_CheackBox.setBackground(new java.awt.Color(255, 255, 51));
        date_ButtonGroup.add(equal_CheackBox);
        equal_CheackBox.setText("Equal");
        equal_CheackBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        equal_CheackBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equal_CheackBoxActionPerformed(evt);
            }
        });

        early_CheackBox.setBackground(new java.awt.Color(255, 255, 51));
        date_ButtonGroup.add(early_CheackBox);
        early_CheackBox.setText("Early");
        early_CheackBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 255)));
        early_CheackBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                early_CheackBoxActionPerformed(evt);
            }
        });

        late_CheackBox.setBackground(new java.awt.Color(255, 255, 51));
        date_ButtonGroup.add(late_CheackBox);
        late_CheackBox.setText("Late");
        late_CheackBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        late_CheackBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                late_CheackBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("From:");

        jLabel3.setText("To:");

        clear_CheackBox.setBackground(new java.awt.Color(255, 255, 51));
        date_ButtonGroup.add(clear_CheackBox);
        clear_CheackBox.setText("Clear");
        clear_CheackBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_CheackBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout date_panelLayout = new javax.swing.GroupLayout(date_panel);
        date_panel.setLayout(date_panelLayout);
        date_panelLayout.setHorizontalGroup(
            date_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(date_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(date_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(date_panelLayout.createSequentialGroup()
                        .addComponent(betwee_CheackBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(equal_CheackBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(early_CheackBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(late_CheackBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clear_CheackBox))
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        date_panelLayout.setVerticalGroup(
            date_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(date_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(date_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(betwee_CheackBox)
                    .addComponent(equal_CheackBox)
                    .addComponent(early_CheackBox)
                    .addComponent(late_CheackBox)
                    .addComponent(clear_CheackBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(29, 29, 29)
                .addComponent(jLabel3)
                .addContainerGap(55, Short.MAX_VALUE))
        );

        dmReport_party_ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Party Name" }));
        dmReport_party_ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dmReport_party_ComboBoxActionPerformed(evt);
            }
        });

        report_Button.setText("Get Report");
        report_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                report_ButtonActionPerformed(evt);
            }
        });

        reset_Button.setText("Reset");
        reset_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_ButtonActionPerformed(evt);
            }
        });

        export_Button.setText("Export to Excel");
        export_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                export_ButtonActionPerformed(evt);
            }
        });

        print_Button.setText("Print");
        print_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                print_ButtonActionPerformed(evt);
            }
        });

        dm_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sr.No", "Party Name", "Product Name", "Product Size", "Measurement", "Value", "Total Amount", "Payment Type", "Driver Name", "Vehicle Number", "Vehicle Name", "DOO/U", "TOO/U", "Added By", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(dm_Table);
        dm_Table.getColumnModel().getColumn(1).setPreferredWidth(170);

        javax.swing.GroupLayout DmReport_PanelLayout = new javax.swing.GroupLayout(DmReport_Panel);
        DmReport_Panel.setLayout(DmReport_PanelLayout);
        DmReport_PanelLayout.setHorizontalGroup(
            DmReport_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DmReport_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(date_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DmReport_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(DmReport_PanelLayout.createSequentialGroup()
                        .addComponent(report_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reset_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(dmReport_party_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(export_Button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(print_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1263, Short.MAX_VALUE)
        );
        DmReport_PanelLayout.setVerticalGroup(
            DmReport_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DmReport_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DmReport_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(date_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DmReport_PanelLayout.createSequentialGroup()
                        .addComponent(dmReport_party_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(DmReport_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(report_Button)
                            .addComponent(reset_Button)
                            .addComponent(export_Button)
                            .addComponent(print_Button))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DmReport_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DmReport_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void betwee_CheackBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_betwee_CheackBoxActionPerformed
        // TODO add your handling code here:
        if (betwee_CheackBox.isSelected()) {
            report_Button.setEnabled(true);
        }
    }//GEN-LAST:event_betwee_CheackBoxActionPerformed

    private void equal_CheackBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equal_CheackBoxActionPerformed
        // TODO add your handling code here:
        if (equal_CheackBox.isSelected()) {
            report_Button.setEnabled(true);
        }
    }//GEN-LAST:event_equal_CheackBoxActionPerformed

    private void early_CheackBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_early_CheackBoxActionPerformed
        // TODO add your handling code here:
        if (early_CheackBox.isSelected()) {
            report_Button.setEnabled(true);
        }
    }//GEN-LAST:event_early_CheackBoxActionPerformed

    private void late_CheackBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_late_CheackBoxActionPerformed
        // TODO add your handling code here:    
        if (late_CheackBox.isSelected()) {
            report_Button.setEnabled(true);
        }
    }//GEN-LAST:event_late_CheackBoxActionPerformed

    private void reset_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_ButtonActionPerformed
        // TODO add your handling code here:
        reset();
        currenTDate = new Date();
        dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        datestring = dateFormat.format(currenTDate);
        report("from com.JD.PrintReceiptDM.Hibernate.config.Printreceiptdm where dateOfAddition='" + datestring + "'");
    }//GEN-LAST:event_reset_ButtonActionPerformed
    void reset() {
        dmReport_party_ComboBox.setSelectedItem("Party Name");
        paymentType_ButtonGroup.clearSelection();
        date_ButtonGroup.clearSelection();
        report_Button.setEnabled(false);

    }
    private void report_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_report_ButtonActionPerformed
        // TODO add your handling code here:
        currenTDate = new Date();
        dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        datestring = dateFormat.format(currenTDate);
        int month1 = 0;
        int month2 = 0;
        if (date1.getModel().getMonth() == 12) {
            month1 = 1;
        } else {
            month1 = date1.getModel().getMonth() + 1;
        }
        if (date2.getModel().getMonth() == 12) {
            month2 = 1;
        } else {
            month2 = date2.getModel().getMonth() + 1;
        }
        String date11 = date1.getModel().getYear() + "-" + month1 + "-" + date1.getModel().getDay();
        String date22 = date2.getModel().getYear() + "-" + month2 + "-" + date2.getModel().getDay();
        queryList.clear();
        String queryMaker = "from com.JD.PrintReceiptDM.Hibernate.config.Printreceiptdm ";
        String queryConnector = "where ";
        String dateQuery = null;
        String partyQuery = null;
        if (betwee_CheackBox.isSelected()) {
            dateQuery = "dateOfAddition BETWEEN '" + date11 + "' and '" + date22 + "' ";
        } else if (early_CheackBox.isSelected()) {
            dateQuery = "dateOfAddition<='" + date11 + "' ";
        } else if (late_CheackBox.isSelected()) {
            dateQuery = " dateOfAddition>='" + date11 + "' ";
        } else if (equal_CheackBox.isSelected()) {
            dateQuery = " dateOfAddition='" + date11 + "' ";
        }
        if (dmReport_party_ComboBox.getSelectedIndex() > 0) {
            partyQuery = "partyLink='" + dmReport_party_ComboBox.getSelectedItem().toString() + "' ";
        }

        if (dateQuery != null) {
            queryList.add(dateQuery);
        } else {
            dateQuery = "dateOfAddition='" + datestring + "'";
            queryList.add(dateQuery);
        }

        if (partyQuery != null) {
            queryList.add(partyQuery);
        }
        int listSize = queryList.size();
        if (listSize > 0) {
            int counter = 0;
            queryMaker += queryConnector;
            for (Object object : queryList) {
                ++counter;
                if (counter != listSize) {
                    queryMaker += object.toString() + "and ";
                } else {
                    queryMaker += object.toString();
                }
            }
        }
        report(queryMaker);
        reset();
    }//GEN-LAST:event_report_ButtonActionPerformed

    private void dmReport_party_ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dmReport_party_ComboBoxActionPerformed
        // TODO add your handling code here:

        if (dmReport_party_ComboBox.getSelectedIndex() > 0) {
            report_Button.setEnabled(true);
        }


    }//GEN-LAST:event_dmReport_party_ComboBoxActionPerformed

    private void clear_CheackBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_CheackBoxActionPerformed
        // TODO add your handling code here:
        if (clear_CheackBox.isSelected()) {
            if (dmReport_party_ComboBox.getSelectedIndex() > 0) {
                report_Button.setEnabled(true);
            } else {
                report_Button.setEnabled(false);
            }
        }
    }//GEN-LAST:event_clear_CheackBoxActionPerformed

    private void export_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_export_ButtonActionPerformed
        // TODO add your handling code here:
        if (dm_Table.getModel().getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Cant Export ! No Data In The Table");
        } else {
            new ExportToExcel().saveToExcel(dm_Table);
        }

    }//GEN-LAST:event_export_ButtonActionPerformed

    private void print_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_print_ButtonActionPerformed
        // TODO add your handling code here:
        if (dm_Table.getModel().getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Cant Print ! No Data In The Table");
        } else {
            try {
                dm_Table.print();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Something Went Wrong ! Please Cheack your Printer");
            }
        }

    }//GEN-LAST:event_print_ButtonActionPerformed
    public void report(String queryMaker) {
        int indexJTable = -1;
        for (int i = defaultTableModel.getRowCount() - 1; i >= 0; i--) {
            defaultTableModel.removeRow(i);
        }
        Session session = search_SessionFactory.openSession();
        Query q = session.createQuery(queryMaker);
        for (Object object : q.list()) {
            com.JD.PrintReceiptDM.Hibernate.config.Printreceiptdm d = (com.JD.PrintReceiptDM.Hibernate.config.Printreceiptdm) object;
            indexJTable += 1;
            defaultTableModel.insertRow(indexJTable, new Object[]{d.getSrno(), d.getPartyLink(), d.getProductName(), d.getProductSize(), d.getProductMeasurement(), d.getProductValue(), d.getTotalAmount(), d.getPaymentType(), d.getDriverName(), d.getVehicleNumber(), d.getVehicleName(), d.getDateOfAddition(), d.getTimeOfAddition(), d.getAddedByPersonName(), d.getPrintingStatus()});
        }
        session.close();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DM_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DM_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DM_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DM_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new DM_Report().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel DmReport_Panel;
    private javax.swing.JCheckBox betwee_CheackBox;
    private javax.swing.JCheckBox clear_CheackBox;
    private javax.swing.ButtonGroup date_ButtonGroup;
    private javax.swing.JPanel date_panel;
    private javax.swing.JComboBox dmReport_party_ComboBox;
    private javax.swing.JTable dm_Table;
    private javax.swing.JCheckBox early_CheackBox;
    private javax.swing.JCheckBox equal_CheackBox;
    private javax.swing.JButton export_Button;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox late_CheackBox;
    private javax.swing.ButtonGroup paymentType_ButtonGroup;
    private javax.swing.JButton print_Button;
    private javax.swing.JButton report_Button;
    private javax.swing.JButton reset_Button;
    // End of variables declaration//GEN-END:variables
}
